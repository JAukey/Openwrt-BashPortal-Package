#!/bin/sh /etc/rc.common 
# Copyright (C) 2006 OpenWrt.org
START=98
EXTRA_COMMANDS="status"
EXTRA_HELP="status Print the status of the service"
section_enabled(){
	config_get_bool enabled "$1" 'enabled' 0
	[ $enabled -gt 0 ]
}
system_config(){
	config_get hostname "$1" hostname
}
get_config(){
	config_load bashportal
	config_get httpport "base" "httpport" "2561"
	config_get portalpath "base" "portalpath" "/etc/bashportal/html"
	config_get luafile "base" "luafile" "/etc/bashportal/html/lua/portal.lua"
	config_get ngxconf "base" "ngxconf" "/etc/nginx/nginx.conf"
	config_get interfaces "base" "interfaces" "br-lan"	
	config_get_bool activityen "base" "activityen" "0"
	config_get activitytime "base" "activitytime" "0"
        config_load system
	config_foreach system_config system
        config_load network
	config_get hostip "lan" "ipaddr" "192.168.1.1"
}
create_ngx_server_file(){
	local hostname=$1
	local httpport=$2
	local portalpath=$3
	local luafile=$4
	echo "server {
		listen       $httpport;
		server_name  localhost;
        	resolver 127.0.0.1; 
		location /portal {
			alias $portalpath;
		}
		location /lua {
			content_by_lua_file $luafile;
		}
		location / {
        		rewrite ^(.*)$ http://$hostname.lan:$httpport/portal;
        	}
    	}" > /tmp/ngx_server.conf
}	
start(){
	config_load bashportal
	section_enabled "base" || return 1
	get_config
	create_ngx_server_file $hostname $httpport $portalpath $luafile
	sed -i '/ngx_server.conf/d' $ngxconf
	sed -i '/http {/a\include /tmp/ngx_server.conf;' $ngxconf
	/etc/init.d/nginx restart
	/usr/bin/bashportal start "$interfaces $hostip:$httpport"
	if [ $activityen -gt 0 ];then
		/usr/bin/killall -9 clientkick
		/usr/bin/clientkick $activitytime & 
	fi
}
stop(){ 
	config_load bashportal
	get_config
	sed -i '/ngx_server.conf/d' $ngxconf
	/etc/init.d/nginx restart
	/usr/bin/bashportal stop "$interfaces"
	/usr/bin/killall -9 clientkick
}
status(){
	/usr/bin/bashportal status
}
