#!/bin/sh /etc/rc.common 
# Copyright (C) 2006 OpenWrt.org
START=98
EXTRA_COMMANDS="status"
EXTRA_HELP="status Print the status of the service"
local interfaces=""
section_enabled(){
	config_get_bool enabled "$1" 'enabled' 0
	[ $enabled -gt 0 ]
}
get_hostname(){
	config_get hostname "$1" hostname
}
get_config(){
	config_load bashportal
        config_load system
	config_foreach get_hostname system
	config_get hostip "base" "hostip" "192.168.1.1"
	config_get httpport "base" "httpport" "2561"
	config_get portalpath "base" "portalpath" "/etc/bashportal/html"
	config_get luafile "base" "luafile" "/etc/bashportal/html/lua/portal.lua"
	config_get interface "interface" "interface" "br-lan"	
	for i in $interface;do
		interfaces="$interfaces,$i"
	done
}
create_ngx_server_file(){
local hostname=$1
local httpport=$2
local portalpath=$3
local luafile=$4
echo "server {
	listen       $httpport;
	server_name  localhost;
        resolver 127.0.0.1; 
	location /portal {
		alias $portalpath;
	}
	location /lua {
		content_by_lua_file $luafile;
		}
	location / {
        rewrite ^(.*)$ http://$hostname.lan:$httpport/portal;
        }
    }" > /tmp/ngx_server_file
}	
start(){
	config_load bashportal
	section_enabled "base" || return 1
	get_config
	create_ngx_server_file $hostname $httpport $portalpath $luafile
        /usr/bin/bashportal start "$interfaces $hostip:$httpport"
}
stop(){ 
	config_load bashportal
	section_enabled "base" || return 1
	get_config
        /usr/bin/bashportal stop "$interfaces"
}
restart(){
	echo "Plese use start and stop!"
}
status(){
	/usr/bin/bashportal status
}
